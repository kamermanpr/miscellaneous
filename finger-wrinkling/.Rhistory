install.packages(c("maptools", "rgeos"))
install.packages("survey")
install.packages("powerSurvEpi")
0.95^2
qnorm(0.95)
qnorm(0.975)
.c<-qnorm(c)
c<-qnorm(0.975)
.c<-qnorm(0.975)
.c
equ<-function(E=0.05, p=0.5, c=0.975) {
.c<-qnorm(c)
.p<-p
.E<-E
a<-4(.c)^2
b<-.p(1-.p)
c<-.E^2
x<-(a*b)/c
}
equ()
equ<-function(E=0.05, p=0.5, c=0.975) {
.c<-qnorm(c)
.p<-p
.E<-E
a<-4(.c)^2
b<-.p(1-.p)
c<-.E^2
x<-(a*b)/c
return(x)
}
equ()
equ<-function(E=0.05, p=0.5, c=0.975) {
g<-qnorm(c)
h<-p
i<-E
a<-4(g)^2
b<-h(1-h)
c<-i^2
x<-(a*b)/c
return(x)
}
equ()
equ(E=0.05, p=0.5, c=0.975)
x<-4(qnorm(0.975))^2
x<-4(qnorm(0.975))^2
x<-4(qnorm(0.975))^2
x<-4(qnorm(0.975))^2
x<-4(qnorm(0.975))^2
x<-qnorm(0.975)
x<-4*qnorm(0.975)
x<-4(qnorm(0.975))
x<-4*(qnorm(0.975))^2
b<-0.5*(1-0.5)
c<-0.05^2
a<-4*(qnorm(0.975))^2
x<-(a*b)/c
x
mat<-matrix(c(25,20,5,20,0,0), ncol=2, nrow=3, byrow = F)
mat
fisher.test(mat)
mat<-matrix(c(25,20,5,20,0,0), ncol=2, nrow=3, byrow = F, dimname=list(c("zero", "mild", "severe"), c("Topla", "Water")))
mat
mat<-matrix(c(25,20,5,2,0,0), ncol=2, nrow=3, byrow = F, dimname=list(c("zero", "mild", "severe"), c("Topla", "Water")))
mat
fisher.test(mat)
fish<-function(A,B,C,D,E,F) {
data<-matrix(c(A,B,C,D,E,F), ncol=2, nrow=3, byrow = F, dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T, conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
fish(25,20,5,2,0,0)
fish(A=25,B=20,C=5,D=2,E=0,F=0)
fish<-function(A,B,C,D,E,F) {
data<-matrix(c(A,B,C,D,E,F), ncol=2, nrow=3, byrow = F, dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T, conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
fish(25, 20, 5, 8, 6, 0)
fish<-function(A,B,C,D,E,F) {
data<<-matrix(c(A,B,C,D,E,F), ncol=2, nrow=3, byrow = F, dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T, conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
data
fish<-function(A,B,C,D,E,F) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# F = Water "3-4" (severe)
data<=matrix(c(A,B,C,D,E,F), ncol=2, nrow=3, byrow = F, dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T, conf.level = 0.95, simulate.p.value = T, B=10000)
mosaic<-mosaicplot(data)
return(fish)
return(mosaic)
}
fish(20,25,8,10,0,0)
fish<-function(A,B,C,D,E,F) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# F = Water "3-4" (severe)
data<=matrix(c(A,B,C,D,E,F), ncol=2, nrow=3, byrow = F, dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T, conf.level = 0.95, simulate.p.value = T, B=10000)
mosaic<-mosaicplot(data)
return(fish)
}
fish(20,25,8,10,0,0)
fish<-fisher.test(data, conf.int=T, conf.level = 0.95, simulate.p.value = T, B=10000)
fish<-function(A,B,C,D,E,F) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# F = Water "3-4" (severe)
data<=matrix(c(A,B,C,D,E,F), ncol=2, nrow=3, byrow = F, dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T, conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
fish(20,25,8,10,0,0)
fish<-function(A,B,C,D,E,F) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# F = Water "3-4" (severe)
data<=matrix(c(A,B,C,D,E,F),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
fish(20,25,8,10,0,0)
fish<-function(A=0,B=0,C=0,D=0,E=0,F=0) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# F = Water "3-4" (severe)
data<=matrix(c(A,B,C,D,E,F),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
fish(20,25,8,10,0,0)
fish<-function(A=0,B=0,C=0,D=0,E=0,F=0) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# F = Water "3-4" (severe)
data<=matrix(c(A,B,C,D,E,F),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
fish(20,25,8,10,0,0)
fish<-function(A=0,B=0,C=0,D=0,E=0,F=0) {
data<=matrix(c(A,B,C,D,E,F),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
fish(20,25,8,10,0,0)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
A<-A
# B = Topla "1-2" (mild)
B<-B
# C = Topla "3-4" (severe)
C<-C
# D = Water "0"
D<-D
# E = Water "1-2" (mild)
E<-E
# F = Water "3-4" (severe)
G<-G
data<=matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
fish(20,25,8,10,0,0)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
fish(20,25,8,10,0,0)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
mosaic<-mosaicplot(data)
return(fish)
return(mosaic)
}
fish(20,25,8,10,0,0)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
mosaic<-mosaicplot(data, col=rainbow(6))
return(fish)
return(mosaic)
}
fish(20,25,8,10,0,0)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
mosaic<-mosaicplot(data, col=rainbow(2))
return(fish)
return(mosaic)
}
fish(20,25,8,10,0,0)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
mosaic<-mosaicplot(data, col=c('blue', 'lightblue', 'red', 'brown', 'black', 'white')
return(fish)
return(mosaic)
}
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
mosaic<-mosaicplot(data, col=c('blue', 'lightblue', 'red', 'brown', 'black', 'white'))
return(fish)
return(mosaic)
}
fish(20,25,8,10,0,0)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
mosaic<-mosaicplot(data, col=c('white', 'blue'))
return(fish)
return(mosaic)
}
fish(20,25,8,10,0,0)
x<-fish(20,25,8,10,0,0)
x
str(x)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
fish$p.value=fish$p.value*4
return(fish)
}
x<-fish(20,25,8,10,0,0)
x
str(x)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
return(fish)
}
x<-fish(20,25,8,10,0,0)
x
str(x)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
fish$p.value=fish$p.value*4
return(fish)
}
x<-fish(20,25,8,10,0,0)
x
0.0011*4
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G),
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T,
conf.level = 0.95, simulate.p.value = T, B=10000)
fish$p.value=fish$p.value*4
return(fish)
}
x<-fish(20,25,8,10,0,0)
x
str(x)
fish<-function(A,B,C,D,E,G) {
# A = Topla "0"
# B = Topla "1-2" (mild)
# C = Topla "3-4" (severe)
# D = Water "0"
# E = Water "1-2" (mild)
# G = Water "3-4" (severe)
data<-matrix(c(A,B,C,D,E,G), # Make a matrix
ncol=2, nrow=3, byrow = F,
dimname=list(c("Zero", "Mild", "Severe"), c("Topla", "Water")))
fish<-fisher.test(data, conf.int=T, # Perform a Fisher's Exact test
conf.level = 0.95, simulate.p.value = T, B=10000)
fish$p.value=fish$p.value*4 # Bonferroni corrected p-value
return(fish)
}
fish(20,25,8,10,0,0)
packages<-c("biglm", "coin", "curl", "devtools", "DiagrammeR", "dplyr", "DT",
"dygraphs", "epiR", "epitools", "fifer", "ggplot2",
"ggvis", "googleVis", "ggthemes", "GPArotation", "htmlwidgets",
"knitr", "knitcitations", "lme4", "lubridate", "pander",
"party", "plyr", "powerSurvEpi", "psych",
"rmarkdown", "pwr", "shiny", "shinydashboard",
"tidyr", "vcd", "vcdExtra",
"readxl", "xtable", "zoo")
install.packages("roxygen2")
install.packages("googlesheets")
library(googlesheets)
gs_user
gs_user()
gs_auth(new_user = T)
gs_user()
setwd("~/GoogleDrive/GitHub/MiscellaneousData/FingerWrinkling")
data<-read.csv("grading.csv", header=T)
# Check the data
head(data)
tail(data)
str(data)
# Data summary
library(dplyr)
summ<-data %>%
group_by(ID, Intervention) %>%
summarise(Median=median(WinkleGrade))
summ<-data %>%
group_by(ID, Intervention) %>%
summarise(Median=median(WrinkleGrade))
summ
summ<-data %>%
group_by(Intervention) %>%
summarise(Median=median(WrinkleGrade), IQR=IQR(WrinkleGrade))
summ
head(data)
summ<-data %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), IQR=IQR(WrinkleGrade))
summ
library(knitr)
kable(summ)
summ<-data %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), IQR=quantile(WrinkleGrade, probs=c(0.25, 0.75)))
quantile(data$WrinkleGrade, probs=c(0.25, 0.75)))
quantile(data$WrinkleGrade, probs=c(0.25, 0.75))
summ<-data %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), IQR=quantile(WrinkleGrade, probs=c(0.25, 0.75)))
summ<-data %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), IQR=quantile(WrinkleGrade))
summ<-data %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), IQR=funs(quantile(WrinkleGrade, probs=c(0.25, 0.75))))
kable(summ, align='l')
summ<-data %>%
tbl_df() %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), IQR=quantile(WrinkleGrade, probs=c(0.25, 0.75)))
summ<-data %>%
tbl_df() %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), Quartile.25=quantile(WrinkleGrade, 0.25), Quartile.75=quantile(WrinkleGrade, 0.75))
kable(summ, align='l')
summ<-data %>%
tbl_df() %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), Quartile.25=quantile(WrinkleGrade, 0.25), Quartile.75=quantile(WrinkleGrade, 0.75))
kable(summ, align='l', digits=3)
kable()
summ<-data %>%
tbl_df() %>%
group_by(Time, Intervention) %>%
summarise(Median=round(median(WrinkleGrade),2), Quartile.25=round(quantile(WrinkleGrade, 0.25),2), Quartile.75=round(quantile(WrinkleGrade, 0.75),2))
kable(summ, align='l', format='markdown')
summ<-data %>%
tbl_df() %>%
group_by(Time, Intervention) %>%
summarise(Median=round(median(WrinkleGrade),1), Quartile.25=round(quantile(WrinkleGrade, 0.25),1), Quartile.75=round(quantile(WrinkleGrade, 0.75),1))
kable(summ, align='l', format='markdown')
summ<-data %>%
tbl_df() %>%
group_by(Time, Intervention) %>%
summarise(Median=round(median(WrinkleGrade),2), Quartile.25=round(quantile(WrinkleGrade, 0.25),2), Quartile.75=round(quantile(WrinkleGrade, 0.75),1))
kable(summ, align='l', format='markdown')
summ<-data %>%
tbl_df() %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), Quartile.25=quantile(WrinkleGrade, 0.25), Quartile.75=quantile(WrinkleGrade, 0.75))
kable(summ, align='l', digits=2, format='markdown')
summ<-data %>%
tbl_df() %>%
group_by(Time, Intervention) %>%
summarise(Median=median(WrinkleGrade), Quartile.25=quantile(WrinkleGrade, 0.25), Quartile.75=quantile(WrinkleGrade, 0.75))
kable(summ, align='l', digits=1, format='markdown')
```
